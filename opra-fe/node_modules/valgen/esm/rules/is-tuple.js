import { validator } from '../core/index.js';
export function isTuple(items, options) {
    return validator('isTuple', function (input, context, _this) {
        if (input != null && context.coerce && !Array.isArray(input))
            input = [input];
        if (!Array.isArray(input)) {
            context.fail(_this, `{{label}} must be a tuple`, input);
            return;
        }
        const location = context.location || '';
        let itemRule;
        let i;
        let v;
        const l = input.length;
        const out = [];
        const nl = items.length;
        const itemContext = context.extend();
        for (i = 0; i < l && i < nl; i++) {
            itemRule = items[i];
            itemContext.scope = input;
            itemContext.label = context.label ? context.label + `[${i}]` : undefined;
            itemContext.index = i;
            itemContext.location = location + '[' + i + ']';
            itemContext.label = (itemContext.label || itemContext.property || 'Value at ') +
                `[${i}]`;
            v = itemRule(input[i], itemContext);
            out.push(v);
        }
        return context.errors.length ? undefined : out;
    }, options);
}
