"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isHexadecimal = exports.isDecimal = exports.isAscii = exports.isAlphanumeric = exports.isAlpha = exports.isUppercase = exports.isLowercase = exports.isJWT = exports.isHexColor = exports.isETHAddress = exports.isBtcAddress = exports.isISSN = exports.isFQDN = exports.isEAN = exports.isIBAN = exports.isCreditCard = exports.isBIC = exports.isBase64 = exports.isURL = exports.isPort = exports.isMACAddress = exports.isIPRange = exports.isIP = exports.isMobilePhone = exports.isEmail = exports.isUUID5 = exports.isUUID4 = exports.isUUID3 = exports.isUUID2 = exports.isUUID1 = exports.isUUID = exports.isString = exports.isObjectId = exports.isObject = exports.isNumber = exports.isUndefined = exports.isDefined = exports.isNullish = exports.isNull = exports.isInteger = exports.isNotEmpty = exports.isEmpty = exports.isDateString = exports.isDate = exports.isBoolean = exports.isBigint = exports.isArray = exports.isAny = exports.vg = void 0;
const vg = __importStar(require("./rules/index.js"));
exports.vg = vg;
__exportStar(require("./constants.js"), exports);
__exportStar(require("./core/index.js"), exports);
const isAny = vg.isAny();
exports.isAny = isAny;
const isArray = vg.isArray();
exports.isArray = isArray;
const isBigint = vg.isBigint();
exports.isBigint = isBigint;
const isBoolean = vg.isBoolean();
exports.isBoolean = isBoolean;
const isDate = vg.isDate();
exports.isDate = isDate;
const isDateString = vg.isDateString();
exports.isDateString = isDateString;
const isEmpty = vg.isEmpty();
exports.isEmpty = isEmpty;
const isNotEmpty = vg.isNotEmpty();
exports.isNotEmpty = isNotEmpty;
const isInteger = vg.isInteger();
exports.isInteger = isInteger;
const isNull = vg.isNull();
exports.isNull = isNull;
const isNullish = vg.isNullish();
exports.isNullish = isNullish;
const isDefined = vg.isDefined();
exports.isDefined = isDefined;
const isUndefined = vg.isUndefined();
exports.isUndefined = isUndefined;
const isNumber = vg.isNumber();
exports.isNumber = isNumber;
const isObject = vg.isObject();
exports.isObject = isObject;
const isObjectId = vg.isObjectId();
exports.isObjectId = isObjectId;
const isString = vg.isString();
exports.isString = isString;
const isUUID = vg.isUUID();
exports.isUUID = isUUID;
const isUUID1 = vg.isUUID(1);
exports.isUUID1 = isUUID1;
const isUUID2 = vg.isUUID(2);
exports.isUUID2 = isUUID2;
const isUUID3 = vg.isUUID(3);
exports.isUUID3 = isUUID3;
const isUUID4 = vg.isUUID(4);
exports.isUUID4 = isUUID4;
const isUUID5 = vg.isUUID(5);
exports.isUUID5 = isUUID5;
const isEmail = vg.isEmail();
exports.isEmail = isEmail;
const isMobilePhone = vg.isMobilePhone();
exports.isMobilePhone = isMobilePhone;
const isIP = vg.isIP();
exports.isIP = isIP;
const isIPRange = vg.isIPRange();
exports.isIPRange = isIPRange;
const isMACAddress = vg.isMACAddress();
exports.isMACAddress = isMACAddress;
const isPort = vg.isPort();
exports.isPort = isPort;
const isURL = vg.isURL();
exports.isURL = isURL;
const isBase64 = vg.isBase64();
exports.isBase64 = isBase64;
const isBIC = vg.isBIC();
exports.isBIC = isBIC;
const isCreditCard = vg.isCreditCard();
exports.isCreditCard = isCreditCard;
const isIBAN = vg.isIBAN();
exports.isIBAN = isIBAN;
const isEAN = vg.isEAN();
exports.isEAN = isEAN;
const isFQDN = vg.isFQDN();
exports.isFQDN = isFQDN;
const isISSN = vg.isISSN();
exports.isISSN = isISSN;
const isBtcAddress = vg.isBtcAddress();
exports.isBtcAddress = isBtcAddress;
const isETHAddress = vg.isETHAddress();
exports.isETHAddress = isETHAddress;
const isHexColor = vg.isHexColor();
exports.isHexColor = isHexColor;
const isJWT = vg.isJWT();
exports.isJWT = isJWT;
const isLowercase = vg.isLowercase();
exports.isLowercase = isLowercase;
const isUppercase = vg.isUppercase();
exports.isUppercase = isUppercase;
const isAlpha = vg.isAlpha();
exports.isAlpha = isAlpha;
const isAlphanumeric = vg.isAlphanumeric();
exports.isAlphanumeric = isAlphanumeric;
const isAscii = vg.isAscii();
exports.isAscii = isAscii;
const isDecimal = vg.isDecimal();
exports.isDecimal = isDecimal;
const isHexadecimal = vg.isHexadecimal();
exports.isHexadecimal = isHexadecimal;
