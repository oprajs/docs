"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.trimStart = exports.trimEnd = exports.trim = exports.stringSplit = exports.stringReplace = exports.isString = void 0;
const index_js_1 = require("../core/index.js");
/**
 * Validates if value is "string".
 * Converts input value to string if coerce option is set to 'true'.
 * @validator isString
 */
function isString(options) {
    return (0, index_js_1.validator)('isString', function (input, context, _this) {
        if (input != null && typeof input !== 'string' && context.coerce) {
            if (typeof input === 'object') {
                if (typeof input.toJSON === 'function')
                    input = input.toJSON();
                else
                    input = JSON.stringify(input);
            }
            else
                input = String(input);
        }
        if (typeof input === 'string')
            return input;
        context.fail(_this, `{{label}} must be a string`, input);
    }, options);
}
exports.isString = isString;
function stringReplace(searchValue, replacer) {
    return (0, index_js_1.validator)('stringReplace', function (input) {
        if (input == null)
            return input;
        return String(input).replace(searchValue, replacer);
    });
}
exports.stringReplace = stringReplace;
function stringSplit(splitter, limit) {
    return (0, index_js_1.validator)('stringSplit', function (input) {
        if (input == null)
            return input;
        return String(input).split(splitter, limit);
    });
}
exports.stringSplit = stringSplit;
/**
 * Removes whitespace from both ends of a string
 * @validator trim
 */
function trim() {
    return (0, index_js_1.validator)('trim', function (input) {
        if (input == null)
            return input;
        return String(input).trim();
    });
}
exports.trim = trim;
// *************************************************************
/**
 * Removes whitespace from the end of a string
 * @validator trimEnd
 */
const trimEnd = () => trimEndRule;
exports.trimEnd = trimEnd;
const trimEndRule = (0, index_js_1.validator)('trimEnd', function (input) {
    if (input == null)
        return input;
    return String(input).trimEnd();
});
// *************************************************************
/**
 * Removes whitespace from the beginning of a string
 * @validator trimStart
 */
const trimStart = () => trimStartRule;
exports.trimStart = trimStart;
const trimStartRule = (0, index_js_1.validator)('trimStart', function (input) {
    if (input == null)
        return input;
    return String(input).trimStart();
});
