"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isUndefined = exports.isDefined = exports.isNullish = exports.isNull = void 0;
const index_js_1 = require("../core/index.js");
/**
 * Validates if value is "null".
 * @validator isNull
 */
function isNull(options) {
    return (0, index_js_1.validator)('isNull', function (input, context, _this) {
        if (input === null)
            return input;
        if (context.coerce)
            return null;
        context.fail(_this, `{{label}} must be null`, input);
    }, options);
}
exports.isNull = isNull;
/**
 * Validates if value is "null" or "undefined".
 * @validator isNull
 */
function isNullish(options) {
    return (0, index_js_1.validator)('isNullish', function (input, context, _this) {
        if (input == null)
            return input;
        if (context.coerce)
            return null;
        context.fail(_this, `{{label}} must be null or undefined`, input);
    }, options);
}
exports.isNullish = isNullish;
/**
 * Validates if value is not "undefined" nor "null"
 * @validator isDefined
 */
function isDefined(options) {
    return (0, index_js_1.validator)('is-defined', function (input, context, _this) {
        if (input !== undefined)
            return input;
        context.fail(_this, `{{label}} must be defined`, input);
    }, options);
}
exports.isDefined = isDefined;
/**
 * Validates if value is "undefined"
 * @validator isUndefined
 */
function isUndefined(options) {
    return (0, index_js_1.validator)('isUndefined', function (input, context, _this) {
        if (context.coerce)
            return undefined;
        if (input === undefined)
            return;
        context.fail(_this, `{{label}} mustn\'t be defined`, input);
    }, options);
}
exports.isUndefined = isUndefined;
