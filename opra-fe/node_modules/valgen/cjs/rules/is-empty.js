"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNotEmpty = exports.isEmpty = void 0;
const index_js_1 = require("../core/index.js");
/**
 * Checks if value is an empty. Value should be string, array, set, map or object
 * @validator isEmpty
 */
function isEmpty(options) {
    return (0, index_js_1.validator)('isEmpty', function (input, context, _this) {
        if (input == null)
            return input;
        if (typeof input === 'string') {
            if (!input)
                return input;
        }
        else if (Array.isArray(input)) {
            if (!input.length)
                return input;
        }
        else if (input instanceof Set) {
            if (!input.size)
                return input;
        }
        else if (input instanceof Map) {
            if (!input.size)
                return input;
        }
        else if (typeof input === 'object') {
            if (!Object.keys(input).length)
                return input;
        }
        context.fail(_this, `{{label}} must be empty`, input);
    }, options);
}
exports.isEmpty = isEmpty;
/**
 * Checks if value is a not empty. Value should be string, array, set, map or object
 * @validator isNotEmpty
 */
function isNotEmpty(options) {
    return (0, index_js_1.validator)('isNotEmpty', function (input, context, _this) {
        if (input != null) {
            if (typeof input === 'string') {
                if (input)
                    return input;
            }
            else if (Array.isArray(input)) {
                if (input.length)
                    return input;
            }
            else if (input instanceof Set) {
                if (input.size)
                    return input;
            }
            else if (input instanceof Map) {
                if (input.size)
                    return input;
            }
            else if (typeof input === 'object') {
                if (Object.keys(input).length)
                    return input;
            }
        }
        context.fail(_this, `{{label}} mustn't be empty`, input);
    }, options);
}
exports.isNotEmpty = isNotEmpty;
