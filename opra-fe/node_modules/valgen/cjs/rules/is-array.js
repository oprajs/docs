"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isArray = void 0;
const index_js_1 = require("../core/index.js");
/**
 * Validates if value is "array" and applies validation for each item.
 * Converts input value to array if coerce option is set to 'true'.
 * @validator isArray
 */
function isArray(itemValidator, options) {
    return (0, index_js_1.validator)('isArray', function (input, context, _this) {
        if (input != null && context.coerce && !Array.isArray(input))
            input = [input];
        if (!Array.isArray(input)) {
            context.fail(_this, `{{label}} must be an array`, input);
            return;
        }
        if (!itemValidator)
            return input;
        // const location = context.location || '';
        const itemContext = context.extend();
        let i;
        let v;
        const l = input.length;
        const out = [];
        for (i = 0; i < l; i++) {
            v = input[i];
            itemContext.scope = input;
            // itemContext.location = location + '[' + i + ']';
            itemContext.location = context.location
                ? context.location + `[${i}]`
                : `<Array>[${i}]`;
            itemContext.index = i;
            v = itemValidator(v, itemContext);
            out.push(v);
        }
        return out;
    }, options);
}
exports.isArray = isArray;
