import { ValidationOptions } from '../core/index.js';
/**
 * Validates if value is "null".
 * @validator isNull
 */
export declare function isNull(options?: ValidationOptions): import("../core/validator.js").Validator<null, unknown, import("../core/types.js").ExecutionOptions>;
/**
 * Validates if value is "null" or "undefined".
 * @validator isNull
 */
export declare function isNullish(options?: ValidationOptions): import("../core/validator.js").Validator<null, unknown, import("../core/types.js").ExecutionOptions>;
/**
 * Validates if value is not "undefined" nor "null"
 * @validator isDefined
 */
export declare function isDefined(options?: ValidationOptions): import("../core/validator.js").Validator<any, unknown, import("../core/types.js").ExecutionOptions>;
/**
 * Validates if value is "undefined"
 * @validator isUndefined
 */
export declare function isUndefined(options?: ValidationOptions): import("../core/validator.js").Validator<any, unknown, import("../core/types.js").ExecutionOptions>;
