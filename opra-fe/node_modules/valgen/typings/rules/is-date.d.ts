import { ValidationOptions } from '../core/index.js';
/**
 * Validates if value is instance of "Date".
 * Converts input value to Date if coerce option is set to 'true'.
 * @validator isDate
 */
export declare function isDate(options?: isDate.Options): import("../core/validator.js").Validator<Date, string | number | Date, import("../core/types.js").ExecutionOptions>;
export interface IsDateStringOptions extends ValidationOptions {
    precision?: 'year' | 'month' | 'date' | 'time';
    trim?: 'date' | 'time';
}
/**
 * Validates if value is DFS (date formatted string).
 * Converts input value to DFS if coerce option is set to 'true'.
 * @validator isDateString
 */
export declare function isDateString(options?: IsDateStringOptions): import("../core/validator.js").Validator<string, string | number | Date, import("../core/types.js").ExecutionOptions>;
export declare namespace isDate {
    interface Options extends ValidationOptions {
        precision?: 'year' | 'month' | 'date' | 'time';
    }
}
