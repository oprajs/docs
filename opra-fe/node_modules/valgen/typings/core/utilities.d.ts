import { Context, Validator } from './index.js';
/**
 * Forwards codec process to a sub codec. Useful for circular checks
 * @validator forwardRef
 */
export declare function forwardRef<T, I>(fn: (context: Context) => Validator<T, I>): Validator<T, I, import("./types.js").ExecutionOptions>;
/**
 * if "check" codec passes returns "then", "else" otherwise
 * @validator iif
 */
export declare function iif<TOutput1, TOutput2, TDefault1, TDefault2>(check: Validator<any>, than_: TDefault1 | Validator<TOutput1, any>, else_?: TDefault2 | Validator<TOutput2, any>): any;
