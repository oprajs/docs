import type { ErrorIssue, ExecutionOptions, OnFailFunction } from './types';
import type { Validator } from './validator.js';
export declare class Context implements ExecutionOptions {
    errors: ErrorIssue[];
    maxErrors?: number;
    onFail?: OnFailFunction;
    coerce?: boolean;
    root?: string;
    location?: string;
    scope?: object;
    context?: string;
    property?: string;
    index?: number;
    label?: string;
    [key: string]: any;
    constructor(options?: ExecutionOptions);
    fail(rule: Validator, message: string | Error, value: any, details?: Record<string, any>): void;
    extend(options?: ExecutionOptions): Context;
}
