import { OpraSchema } from '../../schema/index.js';
import { createActionDecorator } from './action-decorator.js';
import { CollectionDecorator } from './collection-decorator.js';
import { ResourceDecorator } from './resource-decorator.js';
const operationProperties = ['create', 'delete', 'get', 'update'];
export function SingletonDecorator(type, options) {
    return ResourceDecorator(OpraSchema.Singleton.Kind, { ...options, type });
}
Object.assign(SingletonDecorator, ResourceDecorator);
/*
 * Action PropertyDecorator
 */
(function (SingletonDecorator) {
    /**
     * Action PropertyDecorator
     */
    function Action(options) {
        const list = [];
        return createActionDecorator(options, operationProperties, list);
    }
    SingletonDecorator.Action = Action;
    function Create(options) {
        return CollectionDecorator.Create(options);
    }
    SingletonDecorator.Create = Create;
})(SingletonDecorator || (SingletonDecorator = {}));
/*
 * Get PropertyDecorator
 */
(function (SingletonDecorator) {
    function Get(options) {
        return CollectionDecorator.Get(options);
    }
    SingletonDecorator.Get = Get;
})(SingletonDecorator || (SingletonDecorator = {}));
/*
 * Delete PropertyDecorator
 */
(function (SingletonDecorator) {
    function Delete(options) {
        return CollectionDecorator.Delete(options);
    }
    SingletonDecorator.Delete = Delete;
})(SingletonDecorator || (SingletonDecorator = {}));
/*
 * Update PropertyDecorator
 */
(function (SingletonDecorator) {
    function Update(options) {
        return CollectionDecorator.Update(options);
    }
    SingletonDecorator.Update = Update;
})(SingletonDecorator || (SingletonDecorator = {}));
