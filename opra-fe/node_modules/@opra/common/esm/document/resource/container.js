import merge from 'putil-merge';
import { DECORATOR } from '../constants.js';
import { ContainerClass } from './container-class.js';
import { ContainerDecorator } from './container-decorator.js';
/**
 * @class Container
 * @decorator Container
 */
export const Container = function (...args) {
    // ClassDecorator
    if (!this) {
        const [options] = args;
        return Container[DECORATOR].call(undefined, options);
    }
    // Constructor
    const [parent, init] = args;
    merge(this, new ContainerClass(parent, init), { descriptor: true });
    if (init.resources) {
        const container = this;
        init.resources.forEach(r => container.resources.set(r.name, r));
    }
};
Container.prototype = ContainerClass.prototype;
Object.assign(Container, ContainerDecorator);
Container[DECORATOR] = ContainerDecorator;
