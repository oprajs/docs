import merge from 'putil-merge';
import { DECORATOR } from '../constants.js';
import { SingletonClass } from './singleton-class.js';
import { SingletonDecorator } from './singleton-decorator.js';
/**
 * @class Singleton
 * @decorator Singleton
 */
export const Singleton = function (...args) {
    // Decorator
    if (!this) {
        const [type, options] = args;
        return Singleton[DECORATOR].call(undefined, type, options);
    }
    // Constructor
    const [parent, init] = args;
    merge(this, new SingletonClass(parent, init), { descriptor: true });
};
Singleton.prototype = SingletonClass.prototype;
Object.assign(Singleton, SingletonDecorator);
Singleton[DECORATOR] = SingletonDecorator;
