import omit from 'lodash.omit';
import { OpraSchema } from '../../schema/index.js';
import { DATATYPE_METADATA, TYPENAME_PATTERN } from '../constants.js';
export function ComplexTypeDecorator(options) {
    return function (target) {
        const name = options?.name || target.name.match(TYPENAME_PATTERN)?.[1] || target.name;
        let metadata = Reflect.getOwnMetadata(DATATYPE_METADATA, target);
        if (!metadata) {
            metadata = {};
            Reflect.defineMetadata(DATATYPE_METADATA, metadata, target);
        }
        metadata.kind = OpraSchema.ComplexType.Kind;
        metadata.name = name;
        // Merge options
        if (options)
            Object.assign(metadata, omit(options, ['kind', 'name', 'base', 'fields']));
    };
}
