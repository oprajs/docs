import { isAny } from 'valgen';
import { omitUndefined } from '../../helpers/index.js';
import { OpraSchema } from '../../schema/index.js';
import { DataType } from './data-type.js';
/**
 * @class SimpleType
 */
export class SimpleTypeClass extends DataType {
    constructor(document, init) {
        super(document, init);
        this.kind = OpraSchema.SimpleType.Kind;
        this.base = init.base;
        this.decode = init.decoder || init.base?.decode || isAny;
        this.encode = init.encoder || init.base?.encode || isAny;
    }
    exportSchema(options) {
        // noinspection UnnecessaryLocalVariableJS
        const out = super.exportSchema(options);
        Object.assign(out, omitUndefined({
            base: this.base ?
                (this.base.name ? this.base.name : this.base.exportSchema(options)) : undefined,
            decode: !options?.webSafe ? this.decode : undefined,
            encode: !options?.webSafe ? this.encode : undefined
        }));
        return out;
    }
    generateCodec(codec) {
        if (codec === 'encode')
            return this.encode;
        else
            return this.decode;
    }
}
