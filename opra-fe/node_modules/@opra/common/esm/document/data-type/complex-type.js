import 'reflect-metadata';
import merge from 'putil-merge';
import { DECORATOR } from '../constants.js';
import { ComplexTypeDecorator } from './complex-type.decorator.js';
import { ComplexTypeClass } from './complex-type-class.js';
/**
 * @class ComplexType
 * @decorator ComplexType
 */
export const ComplexType = function (...args) {
    // Decorator
    if (!this) {
        const [options] = args;
        return ComplexType[DECORATOR](options);
    }
    // Constructor
    const [document, init] = args;
    merge(this, new ComplexTypeClass(document, init), { descriptor: true });
};
ComplexType.prototype = ComplexTypeClass.prototype;
Object.assign(ComplexType, ComplexTypeDecorator);
ComplexType[DECORATOR] = ComplexTypeDecorator;
