"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ForbiddenError = void 0;
const index_js_1 = require("../../http/index.js");
const index_js_2 = require("../../i18n/index.js");
const opra_exception_js_1 = require("../opra-exception.js");
/**
 * 403 Forbidden
 * The client does not have access rights to the content; that is, it is unauthorized,
 * so the server is refusing to give the requested resource. Unlike 401 Unauthorized,
 * the client's identity is known to the server.
 */
class ForbiddenError extends opra_exception_js_1.OpraException {
    constructor() {
        super(...arguments);
        this.status = index_js_1.HttpStatusCode.FORBIDDEN;
    }
    init(issue) {
        super.init({
            message: (0, index_js_2.translate)('error:FORBIDDEN', 'You are not authorized to perform this action'),
            code: 'FORBIDDEN',
            ...issue
        });
    }
}
exports.ForbiddenError = ForbiddenError;
