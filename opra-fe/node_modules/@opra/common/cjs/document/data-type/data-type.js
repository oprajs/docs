"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataType = void 0;
const index_js_1 = require("../../helpers/index.js");
const inspect_util_js_1 = require("../utils/inspect.util.js");
/**
 * @class DataType
 * @abstract
 */
class DataType {
    constructor(document, init) {
        this.document = document;
        this.name = init?.name;
        this.own = {};
        this.description = init?.description;
        if (!this.name)
            this.isEmbedded = true;
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    exportSchema(options) {
        return (0, index_js_1.omitUndefined)({
            kind: this.kind,
            description: this.description
        });
    }
    extendsFrom(type) {
        const dataType = type instanceof DataType ? type : this.document.getDataType(type);
        let t = this;
        while (t) {
            if (t === dataType)
                return true;
            t = t.base;
        }
        return false;
    }
    toString() {
        return `[${Object.getPrototypeOf(this).constructor.name} ${this.name || '#Embedded'}]`;
    }
    [inspect_util_js_1.nodeInspectCustom]() {
        return `[${inspect_util_js_1.colorFgYellow + Object.getPrototypeOf(this).constructor.name + inspect_util_js_1.colorReset}` +
            ` ${inspect_util_js_1.colorFgMagenta + this.name + inspect_util_js_1.colorReset}]`;
    }
}
exports.DataType = DataType;
