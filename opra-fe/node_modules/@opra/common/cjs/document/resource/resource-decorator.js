"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceDecorator = void 0;
const tslib_1 = require("tslib");
const lodash_omit_1 = tslib_1.__importDefault(require("lodash.omit"));
const putil_merge_1 = tslib_1.__importDefault(require("putil-merge"));
const constants_js_1 = require("../constants.js");
function ResourceDecorator(kind, meta) {
    const namePattern = new RegExp(`^(.*)(${kind}|Resource|Controller)$`);
    return function (target) {
        let name = meta?.name;
        if (!name) {
            name = namePattern.exec(target.name)?.[1] || target.name;
            // Containers may start with lowercase
            if (kind === 'Container')
                name = name.charAt(0).toLowerCase() + name.substring(1);
        }
        const metadata = { kind, name };
        const baseMetadata = Reflect.getOwnMetadata(constants_js_1.RESOURCE_METADATA, Object.getPrototypeOf(target));
        if (baseMetadata)
            (0, putil_merge_1.default)(metadata, baseMetadata, { deep: true });
        const oldMetadata = Reflect.getOwnMetadata(constants_js_1.RESOURCE_METADATA, target);
        if (oldMetadata)
            (0, putil_merge_1.default)(metadata, oldMetadata, { deep: true });
        (0, putil_merge_1.default)(metadata, {
            kind,
            name,
            ...(0, lodash_omit_1.default)(meta, ['kind', 'name', 'controller'])
        }, { deep: true });
        Reflect.defineMetadata(constants_js_1.RESOURCE_METADATA, metadata, target);
    };
}
exports.ResourceDecorator = ResourceDecorator;
