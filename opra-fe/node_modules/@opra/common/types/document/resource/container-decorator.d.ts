import { StrictOmit, Type } from 'ts-gems';
import { OpraSchema } from '../../schema/index.js';
import { ActionDecorator } from './action-decorator.js';
import { CollectionDecorator } from './collection-decorator.js';
import type { Container } from './container.js';
import { ResourceDecorator } from './resource-decorator.js';
export declare function ContainerDecorator(options?: Container.DecoratorOptions): ClassDecorator;
export interface ContainerDecorator extends StrictOmit<ResourceDecorator, 'Action'> {
    (options?: Container.DecoratorOptions): ClassDecorator;
    Action: (options?: CollectionDecorator.Action.Options) => ActionDecorator;
}
/**
 * @namespace CollectionDecorator
 */
export declare namespace ContainerDecorator {
    interface Metadata extends StrictOmit<OpraSchema.Container, 'kind' | 'actions' | 'resources'> {
        kind: OpraSchema.Container.Kind;
        name: string;
        actions?: Record<string, ResourceDecorator.OperationMetadata>;
        resources?: Type[];
    }
    /**
     * @namespace Action
     */
    namespace Action {
        interface Metadata extends ResourceDecorator.OperationMetadata {
        }
        interface Options extends ResourceDecorator.OperationOptions {
        }
    }
}
export declare namespace ContainerDecorator {
    /**
     * Action PropertyDecorator
     */
    function Action(options: ResourceDecorator.OperationOptions): ActionDecorator;
}
