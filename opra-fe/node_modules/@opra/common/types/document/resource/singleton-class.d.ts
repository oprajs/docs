import { OpraSchema } from '../../schema/index.js';
import type { ApiDocument } from '../api-document.js';
import type { ComplexType } from '../data-type/complex-type.js';
import type { Container } from './container.js';
import type { CrudOperation } from './crud-operation';
import { CrudResource } from './crud-resource.js';
import type { Singleton } from './singleton.js';
import type { SingletonDecorator } from './singleton-decorator';
export declare class SingletonClass extends CrudResource {
    readonly kind: OpraSchema.Resource.Kind;
    readonly type: ComplexType;
    constructor(parent: ApiDocument | Container, init: Singleton.InitArguments);
    getOperation(name: 'create'): (CrudOperation & Omit<SingletonDecorator.Create.Metadata, keyof CrudOperation>) | undefined;
    getOperation(name: 'delete'): (CrudOperation & Omit<SingletonDecorator.Delete.Metadata, keyof CrudOperation>) | undefined;
    getOperation(name: 'get'): (CrudOperation & Omit<SingletonDecorator.Get.Metadata, keyof CrudOperation>) | undefined;
    getOperation(name: 'update'): (CrudOperation & Omit<SingletonDecorator.Update.Metadata, keyof CrudOperation>) | undefined;
    exportSchema(options?: {
        webSafe?: boolean;
    }): OpraSchema.Singleton;
    normalizeFieldNames(path: string | string[]): string[] | undefined;
}
