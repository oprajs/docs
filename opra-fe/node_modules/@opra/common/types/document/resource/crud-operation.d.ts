import { StrictOmit } from 'ts-gems';
import { Validator } from 'valgen';
import { OpraSchema } from '../../schema/index.js';
import { DataType } from '../data-type/data-type.js';
import { ApiField } from '../data-type/field.js';
import { Endpoint } from './endpoint.js';
import type { Resource } from './resource';
import type { ResourceDecorator } from './resource-decorator.js';
/**
 *
 * @class CrudOperation
 */
export declare class CrudOperation extends Endpoint {
    readonly resource: Resource;
    readonly name: string;
    readonly kind = "operation";
    decodeInput: Validator;
    returnType?: DataType;
    encodeReturning: Validator;
    inputOverwriteFields?: Record<string, ApiField.InitArguments>;
    outputOverwriteFields?: Record<string, ApiField.InitArguments>;
    constructor(resource: Resource, name: string, init: CrudOperation.InitArguments);
    exportSchema(options?: {
        webSafe?: boolean;
    }): OpraSchema.Endpoint<any> & Record<string, any>;
}
export declare namespace CrudOperation {
    interface InitArguments extends StrictOmit<ResourceDecorator.OperationMetadata, 'parameters'> {
        parameters: Record<string, Endpoint.ParameterInit>;
        returnType?: DataType;
    }
}
