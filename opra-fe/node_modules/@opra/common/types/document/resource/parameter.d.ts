import { StrictOmit } from 'ts-gems';
import { Validator } from 'valgen';
import { OpraSchema } from '../../schema/index.js';
import { DataType } from '../data-type/data-type.js';
import type { ResourceDecorator } from './resource-decorator.js';
/**
 *
 * @class Parameter
 */
export declare class Parameter {
    protected _decoder: Validator;
    protected _encoder: Validator;
    readonly name: string;
    readonly type: DataType;
    description?: string;
    isArray?: boolean;
    default?: any;
    required?: boolean;
    deprecated?: boolean | string;
    examples?: any[] | Record<string, any>;
    readonly isBuiltin?: boolean;
    constructor(name: string, init: Parameter.InitArguments);
    exportSchema(options?: {
        webSafe?: boolean;
    }): OpraSchema.Endpoint.Parameter;
    getDecoder(): Validator;
    getEncoder(): Validator;
    generateCodec(codec: 'decode' | 'encode', options?: DataType.GenerateCodecOptions): Validator;
}
export declare namespace Parameter {
    interface InitArguments extends StrictOmit<ResourceDecorator.ParameterMetadata, 'type'> {
        type: DataType;
        isBuiltin?: boolean;
    }
}
