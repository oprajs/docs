import { ResponsiveMap } from '../../helpers/index.js';
import { OpraSchema } from '../../schema/index.js';
import type { ApiDocument } from '../api-document.js';
import type { Collection } from './collection.js';
import type { Container } from './container.js';
import { Resource } from './resource.js';
import { Singleton } from './singleton.js';
import { Storage } from './storage.js';
export declare class ContainerClass extends Resource {
    readonly kind: OpraSchema.Resource.Kind;
    readonly resources: ResponsiveMap<Resource>;
    readonly parent?: Container;
    constructor(owner: ApiDocument | Container, init: Container.InitArguments);
    exportSchema(options?: {
        webSafe?: boolean;
    }): OpraSchema.Container;
    /**
     * Returns Resource instance by path. Returns undefined if not found
     * @param path
     * @param silent
     */
    getResource(path: string, silent: boolean): Resource | undefined;
    getResource(path: string, silent: true): Resource | undefined;
    /**
     * Returns Resource instance by path. Throws error if not found
     * @param path
     */
    getResource(path: string): Resource;
    getResource(path: string, silent: false): Resource;
    /**
     * Returns Collection resource instance by path
     * Returns undefined if not found
     * Throws error if resource is not a Collection
     */
    getContainer(path: string): Container;
    getContainer(path: string, silent: false): Container;
    getContainer(path: string, silent: true): Container | undefined;
    getContainer(path: string, silent?: boolean): Container | undefined;
    /**
     * Returns Collection resource instance by path
     * Returns undefined if not found
     * Throws error if resource is not a Collection
     */
    getCollection(path: string): Collection;
    getCollection(path: string, silent: false): Collection;
    getCollection(path: string, silent: true): Collection | undefined;
    getCollection(path: string, silent?: boolean): Collection | undefined;
    /**
     * Returns Singleton resource instance by path
     * Returns undefined if not found
     * Throws error if resource is not a Collection
     */
    getSingleton(path: string): Singleton;
    getSingleton(path: string, silent: false): Singleton;
    getSingleton(path: string, silent: true): Singleton | undefined;
    getSingleton(path: string, silent?: boolean): Singleton | undefined;
    /**
     * Returns Storage resource instance by path
     * Returns undefined if not found
     * Throws error if resource is not a Collection
     */
    getStorage(path: string): Storage;
    getStorage(path: string, silent: false): Storage;
    getStorage(path: string, silent: true): Storage | undefined;
    getStorage(path: string, silent?: boolean): Storage | undefined;
}
