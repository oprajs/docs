import { StrictOmit } from 'ts-gems';
import { Validator } from 'valgen';
import { OpraSchema } from '../../schema/index.js';
import { DataType } from '../data-type/data-type.js';
import { Endpoint } from './endpoint.js';
import type { Resource } from './resource';
import type { ResourceDecorator } from './resource-decorator.js';
/**
 *
 * @class Action
 */
export declare class Action extends Endpoint {
    readonly resource: Resource;
    readonly name: string;
    readonly kind = "action";
    returnType?: DataType;
    returnMime?: string;
    encodeReturning: Validator;
    constructor(resource: Resource, name: string, init: Action.InitArguments);
    exportSchema(options?: {
        webSafe?: boolean;
    }): OpraSchema.Endpoint;
}
export declare namespace Action {
    interface InitArguments extends StrictOmit<ResourceDecorator.ActionMetadata, 'parameters' | 'returnType'> {
        parameters: Record<string, Endpoint.ParameterInit>;
        returnType?: DataType;
        returnMime?: string;
    }
}
