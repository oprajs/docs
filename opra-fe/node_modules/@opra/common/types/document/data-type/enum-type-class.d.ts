import { Validator } from 'valgen';
import { OpraSchema } from '../../schema/index.js';
import type { ApiDocument } from '../api-document.js';
import { DataType } from './data-type.js';
import type { EnumType } from './enum-type.js';
export declare class EnumTypeClass extends DataType {
    readonly enumObject?: object;
    readonly kind = "EnumType";
    readonly base?: EnumType;
    readonly values: Record<OpraSchema.EnumType.Value, OpraSchema.EnumType.ValueInfo>;
    readonly ownValues: Record<OpraSchema.EnumType.Value, OpraSchema.EnumType.ValueInfo>;
    readonly decode: Validator;
    readonly encode: Validator;
    constructor(document: ApiDocument, init: EnumType.InitArguments);
    isTypeOf(t: object): boolean;
    exportSchema(): OpraSchema.EnumType;
    generateCodec(codec: 'decode' | 'encode'): Validator;
}
