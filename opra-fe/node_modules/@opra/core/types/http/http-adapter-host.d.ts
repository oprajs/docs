import { Collection, OpraURLPath, Parameter, Resource, Singleton, Storage } from '@opra/common';
import { ExecutionContext } from '../execution-context.js';
import { PlatformAdapterHost } from '../platform-adapter.host.js';
import type { Protocol } from '../platform-adapter.js';
import { RequestHost } from '../request.host.js';
import { Request } from '../request.js';
import { RequestContext } from '../request-context.js';
import { HttpServerRequest } from './http-server-request.js';
import { HttpServerResponse } from './http-server-response.js';
/**
 *
 * @class HttpAdapterHost
 */
export declare abstract class HttpAdapterHost extends PlatformAdapterHost {
    protected _protocol: Protocol;
    protected _tempDir: string;
    /**
     * Main http request handler
     * @param incoming
     * @param outgoing
     * @protected
     */
    protected handleHttp(incoming: HttpServerRequest, outgoing: HttpServerResponse): Promise<void>;
    handleExecution(executionContext: ExecutionContext): Promise<void>;
    parseRequest(executionContext: ExecutionContext): Promise<Request>;
    protected _parseRequestAction(executionContext: ExecutionContext, resource: Resource, urlPath: OpraURLPath, searchParams: URLSearchParams): Promise<RequestHost>;
    protected _parseRequestCollection(executionContext: ExecutionContext, resource: Collection, urlPath: OpraURLPath, searchParams: URLSearchParams): Promise<RequestHost>;
    protected _parseRequestSingleton(executionContext: ExecutionContext, resource: Singleton, urlPath: OpraURLPath, searchParams?: URLSearchParams): Promise<RequestHost>;
    protected _parseRequestStorage(executionContext: ExecutionContext, resource: Storage, urlPath: OpraURLPath, searchParams: URLSearchParams): Promise<RequestHost>;
    protected parseParameters(paramDefs: Map<string, Parameter>, searchParams?: URLSearchParams): Record<string, any>;
    protected executeRequest(context: RequestContext): Promise<void>;
    sendResponse(context: RequestContext): Promise<void>;
    protected sendErrorResponse(context: ExecutionContext, errors: any[]): Promise<void>;
}
