import type { PartialSome, StrictOmit } from 'ts-gems';
import type { Resource } from '@opra/common';
import { Action, CrudOperation } from '@opra/common';
import type { HttpServerRequest } from './http/http-server-request.js';
import type { Request } from './request.js';
export declare namespace RequestHost {
    interface Initiator extends PartialSome<StrictOmit<Request, 'resource' | 'switchToHttp' | 'switchToWs' | 'switchToRpc'>, 'params'> {
        controller: Object;
        handler: Function;
        http?: HttpServerRequest;
        [key: string]: any;
    }
}
export interface RequestHost extends Request {
}
export declare class RequestHost implements Request {
    controller: any;
    endpoint: Action | CrudOperation;
    http?: HttpServerRequest;
    key?: any;
    params: Record<string, any>;
    constructor(init: RequestHost.Initiator);
    get resource(): Resource;
    switchToHttp(): HttpServerRequest;
    switchToWs(): never;
    switchToRpc(): never;
}
