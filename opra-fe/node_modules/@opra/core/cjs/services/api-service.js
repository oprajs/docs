"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiService = void 0;
class ApiService {
    get context() {
        if (!this._context)
            throw new Error(`No context assigned for ${Object.getPrototypeOf(this).constructor.name}`);
        return this._context;
    }
    for(context, overwriteProperties, overwriteContext) {
        // Create new context instance
        const ctx = {};
        Object.setPrototypeOf(ctx, context);
        if (overwriteContext)
            Object.assign(ctx, overwriteContext);
        // Create new service instance
        const instance = { _context: ctx };
        Object.setPrototypeOf(instance, this);
        if (overwriteProperties)
            Object.assign(instance, overwriteProperties);
        if (this[ApiService.extendSymbol])
            this[ApiService.extendSymbol](instance);
        return instance;
    }
}
exports.ApiService = ApiService;
(function (ApiService) {
    ApiService.extendSymbol = Symbol('extend');
})(ApiService || (exports.ApiService = ApiService = {}));
