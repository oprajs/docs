import { OpraURLPath } from '@opra/common';
import { HttpAdapterHost } from '../http-adapter-host.js';
import { HttpServerRequest } from '../http-server-request.js';
import { HttpServerResponse } from '../http-server-response.js';
export class ExpressAdapterHost extends HttpAdapterHost {
    constructor(app) {
        super();
        this._platform = 'express';
        this._app = app;
    }
    get app() {
        return this._app;
    }
    async init(api, options) {
        await super.init(api, options);
        this._api = api;
        const basePath = new OpraURLPath(options?.basePath);
        this._app.use(basePath.toString(), (_req, _res) => {
            const req = HttpServerRequest.from(_req);
            const res = HttpServerResponse.from(_res);
            this.handleHttp(req, res)
                .catch((e) => this._logger.fatal(e));
        });
    }
    static async create(app, api, options) {
        const adapter = new ExpressAdapterHost(app);
        await adapter.init(api, options);
        return adapter;
    }
}
